# Generated by Django 3.0.7 on 2021-01-01 12:21

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[(1, 'Ministere'), (2, 'Commissaire'), (3, 'Policier')], default=3, max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Commissaire',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('sexe', models.CharField(choices=[('Masculin', 'M'), ('Feminin', 'F')], default='M', max_length=10)),
                ('date_de_naissance', models.DateTimeField()),
                ('numero_cni', models.CharField(max_length=11, unique=True)),
                ('telephone', models.CharField(max_length=13, validators=[django.core.validators.RegexValidator(message="Le numéro entré n'est pas au bon format", regex='^[0-9]{10,15}$')])),
                ('address', models.TextField()),
                ('matricule', models.CharField(max_length=11, unique=True)),
                ('photo', models.ImageField(upload_to='Commissaire', verbose_name='image')),
                ('date_ajout', models.DateTimeField(auto_now_add=True)),
                ('date_actualisation', models.DateTimeField(auto_now=True)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Commissaire',
                'verbose_name_plural': 'Commissaires',
                'ordering': ['date_ajout'],
            },
        ),
        migrations.CreateModel(
            name='Commissariat',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nom', models.CharField(max_length=60)),
                ('date_ajout', models.DateTimeField(auto_now_add=True)),
                ('chef_du_commissariat', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.Commissaire', verbose_name='Chef du Commissariat')),
            ],
            options={
                'verbose_name': 'Commissariat',
                'verbose_name_plural': 'Commissariats',
                'ordering': ['date_ajout'],
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nom', models.CharField(max_length=60)),
                ('Description', models.TextField(blank=True, max_length=200, null=True)),
                ('date_ajout', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'District',
                'verbose_name_plural': 'Districts',
                'ordering': ['date_ajout'],
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nom', models.CharField(max_length=60)),
                ('date_ajout', models.DateTimeField(auto_now_add=True)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.District', verbose_name='District')),
            ],
            options={
                'verbose_name': 'Region',
                'verbose_name_plural': 'Regions',
                'ordering': ['date_ajout'],
            },
        ),
        migrations.CreateModel(
            name='Ville',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nom', models.CharField(max_length=60)),
                ('date_ajout', models.DateTimeField(auto_now_add=True)),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.Region', verbose_name='Region')),
            ],
            options={
                'verbose_name': 'Ville',
                'verbose_name_plural': 'Villes',
                'ordering': ['date_ajout'],
            },
        ),
        migrations.CreateModel(
            name='Secteur',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nom', models.CharField(max_length=60)),
                ('date_ajout', models.DateTimeField(auto_now_add=True)),
                ('ville', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.Ville', verbose_name='Ville')),
            ],
            options={
                'verbose_name': 'Secteur',
                'verbose_name_plural': 'Secteurs',
                'ordering': ['date_ajout'],
            },
        ),
        migrations.CreateModel(
            name='Quartier',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nom', models.CharField(max_length=60)),
                ('date_ajout', models.DateTimeField(auto_now_add=True)),
                ('secteur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.Secteur', verbose_name='Secteur')),
            ],
            options={
                'verbose_name': 'Quartier',
                'verbose_name_plural': 'Quartiers',
                'ordering': ['date_ajout'],
            },
        ),
        migrations.CreateModel(
            name='Policier',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('sexe', models.CharField(choices=[('Masculin', 'M'), ('Feminin', 'F')], default='M', max_length=10)),
                ('date_de_naissance', models.DateTimeField()),
                ('numero_cni', models.CharField(max_length=11, unique=True)),
                ('matricule', models.CharField(max_length=11, unique=True)),
                ('telephone', models.CharField(max_length=13, validators=[django.core.validators.RegexValidator(message="Le numéro entré n'est pas au bon format", regex='^[0-9]{10,15}$')])),
                ('address', models.TextField()),
                ('photo', models.ImageField(upload_to='Policier', verbose_name='image')),
                ('date_ajout', models.DateTimeField(auto_now_add=True)),
                ('date_actualisation', models.DateTimeField(auto_now=True)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('commissariat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.Commissariat', verbose_name='Policier')),
                ('lieu_de_naissance', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.Ville')),
            ],
            options={
                'verbose_name': 'Policier',
                'verbose_name_plural': 'Policiers',
                'ordering': ['date_ajout'],
            },
        ),
        migrations.CreateModel(
            name='Ministere',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('sexe', models.CharField(choices=[('Masculin', 'M'), ('Feminin', 'F')], default='M', max_length=10)),
                ('date_de_naissance', models.DateTimeField()),
                ('numero_cni', models.CharField(max_length=11, unique=True)),
                ('telephone', models.CharField(max_length=13, validators=[django.core.validators.RegexValidator(message="Le numéro entré n'est pas au bon format", regex='^[0-9]{10,15}$')])),
                ('address', models.TextField()),
                ('photo', models.ImageField(upload_to='Ministere', verbose_name='image')),
                ('date_ajout', models.DateTimeField(auto_now_add=True)),
                ('date_actualisation', models.DateTimeField(auto_now=True)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('lieu_de_naissance', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.Ville')),
            ],
            options={
                'verbose_name': 'Ministere',
                'verbose_name_plural': 'Ministeres',
                'ordering': ['date_ajout'],
            },
        ),
        migrations.CreateModel(
            name='Equipe_enquetrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=60)),
                ('date_formation', models.DateTimeField(auto_now_add=True)),
                ('membres', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.Policier', verbose_name='Policiers enqueteurs')),
            ],
        ),
        migrations.CreateModel(
            name='Crime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nature', models.CharField(choices=[('Vol', 'Vol'), ('Viol', 'Viol'), ('Assassinat', 'Assassinat'), ('Autres', 'Autres')], default='Vol', max_length=11)),
                ('description', models.TextField()),
                ('resolu', models.BooleanField(default=False, verbose_name='crime résolu ?')),
                ('date_commission', models.DateTimeField(auto_now_add=True)),
                ('date_actualisation', models.DateTimeField(auto_now=True)),
                ('date_resolution', models.DateTimeField(auto_now=True)),
                ('equipe_enquetrice', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.Equipe_enquetrice', verbose_name='Equipe qui enquete sur le crime')),
                ('secteur_de_commission', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.Quartier', verbose_name='Quartier de commssion du crime')),
            ],
        ),
        migrations.AddField(
            model_name='commissariat',
            name='ville',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.Ville', verbose_name='Ville'),
        ),
        migrations.AddField(
            model_name='commissaire',
            name='lieu_de_naissance',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.Ville'),
        ),
    ]
